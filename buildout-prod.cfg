# This is the buildout for production environment. The number of ZEO clients
# to four, precompiles .py and corrects file system permissions.

[buildout]
extends =
    buildout-base.cfg
    versions-prod.cfg

parts +=
#    client2
#    client3
#    client4
    precompile
    chown

# Zope client 2
client2-address = 8081
# Zope client 3
#client3-address = 8082
# Zope client 4
#client4-address = 8083

effective-user = plone


# Extend the basic profile
[zeoserver]
extends = buildout-base.cfg
effective-user = ${buildout:effective-user}


# Extend the basic profile
[instance-settings]
extends = buildout-base.cfg
effective-user = ${buildout:effective-user}


[client1]
extends = buildout-base.cfg
effective-user = ${buildout:effective-user}


# client2 picks up nearly all its configuration
# from client1. If you need to create a new client
# stanza, you should be able to copy this (with a new part name),
# changing only the parts with "client2" in them.
# For options see http://pypi.python.org/pypi/collective.recipe.zope2cluster
#[client2]
#recipe = collective.recipe.zope2cluster
#instance-clone = instance-settings
#zeo-client = true
#http-address = ${buildout:client2-address}
## Put the log, pid, lock files in var/client2
#event-log = ${buildout:directory}/var/client2/event.log
#z2-log    = ${buildout:directory}/var/client2/Z2.log
#pid-file  = ${buildout:directory}/var/client2/client.pid
#lock-file = ${buildout:directory}/var/client2/client.lock
#
#zcml =
#    ${buildout:zcml}
#
#products =
#    ${buildout:directory}/products
#    ${productdistros:location}


#[chatserver]
#extends = buildout-base.cfg
#effective-user = ${buildout:effective-user}


#[unifiedinstaller]
#extends = buildout-base.cfg
#clients += client2


[supervisor]
extends = buildout-base.cfg
programs +=
    20 client2      ${buildout:directory}/bin/client2    [console]  true


# Compiles .py files in ./parts and ./products so that they don't
# need to be compiled by the daemon on startup
# For options see http://pypi.python.org/pypi/plone.recipe.precompiler
[precompile]
recipe = plone.recipe.precompiler


# This recipe is used to set permissions -- and ownership for root mode installs
# For options see http://pypi.python.org/pypi/plone.recipe.command
[chown]
recipe = plone.recipe.command
command =
    chmod 600 .installed.cfg admin.cfg
    touch ${buildout:directory}/var/zeoserver/zeoserver.log
    find ${buildout:directory} -type d -name LC_MESSAGES -exec chown -R ${buildout:effective-user} \{\} \;
    chown -R ${buildout:effective-user} ${buildout:directory}/var/filestorage
    chmod 700 ${buildout:directory}/var/filestorage
    mkdir -p ${buildout:directory}/var/blobstorage/tmp
    chown -R ${buildout:effective-user} ${buildout:directory}/var/blobstorage
    chmod 700 ${buildout:directory}/var/blobstorage
    chown -R ${buildout:effective-user} ${buildout:directory}/var/zeoserver
    chmod 700 ${buildout:directory}/var/zeoserver
    chown -R ${buildout:effective-user} ${buildout:directory}/var/client?
    chmod 700 ${buildout:directory}/var/client?
    chown -R ${buildout:effective-user} ${buildout:directory}/var/debug-client
    chmod 700 ${buildout:directory}/var/debug-client
    chown -R ${buildout:effective-user} ${buildout:directory}/var/chatserver
    chmod 700 ${buildout:directory}/var/chatserver
update-command = ${chown:command}
